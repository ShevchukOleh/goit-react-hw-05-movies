{"version":3,"file":"static/js/691.e2fe495d.chunk.js","mappings":"uNAAO,IAAMA,EAAW,+BACXC,EAAU,mCACVC,EAAU,qC,yJCAVC,EAAYC,EAAAA,GAAAA,IAAH,0EAKTC,EAAQD,EAAAA,GAAAA,MAAH,8WAgBLE,EAASF,EAAAA,GAAAA,OAAH,gYAeNG,EAAOH,EAAAA,GAAAA,KAAH,kDAGJI,EAAQJ,EAAAA,GAAAA,EAAH,2P,mCCsClB,EAxEe,WAAO,IAAD,EACnB,GAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,iBAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,mCAAG,iGACjBN,EAAe,IAAIO,gBAAgB,CACvCC,QAASpB,EAAAA,GACTc,MAAOA,IAGHO,EANiB,UAMRtB,EAAAA,GANQ,+BAMuBe,EANvB,YAMgCF,GANhC,SAOAU,EAAAA,EAAAA,IAAUD,GAPV,OAOjBE,EAPiB,OAQfC,EAASD,EAATC,KACRd,EAAUc,EAAKC,SATQ,2CAAH,sDAYtBC,EAAAA,EAAAA,YAAU,WACRR,GAED,GAAE,IAsBH,OACE,UAAChB,EAAD,YACE,UAACI,EAAD,CAAMqB,SAtBY,SAAAC,GACpBA,EAAEC,iBACGf,GAKLJ,EAAU,IACVQ,KALER,EAAU,GAMb,EAaG,WACE,SAACN,EAAD,CACE0B,KAAK,OACLC,MAAOjB,EACPkB,SAfkB,SAAAJ,GACxB,IAAMK,EAAcL,EAAEM,OAAOH,MAC7B,GAAoB,KAAhBE,EACF,OAAOpB,EAAgB,CAAC,GAG1BA,EAAgB,CAAEC,MAAOmB,GAC1B,KAUK,SAAC5B,EAAD,CAAQyB,KAAK,SAAb,SAAsB,eAExB,yBACqB,IAAlBrB,EAAO0B,OAAc1B,EAAO2B,KAAI,SAACC,GAAD,OAC/B,SAAC,EAAAC,KAAD,CAAqBC,GAAE,UAAKF,EAAMG,IAAMC,MAAO,CAAEC,KAAM1B,GAAvD,UAAmE,UAACT,EAAD,WAAO,UAAQ8B,EAAMM,UAA7EN,EAAMG,GADc,KAE5B,yBAAK,+CAIjB,C","sources":["components/API/API.js","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '11c18f4587e0f81a9d7265ade8abe4b9';\nexport const noPhoto = 'https://i.ibb.co/nBW9G9B/avatar.jpg';","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    padding: 5px 20px;\n    max-width: 1400px;\n\n`\nexport const Input = styled.input`\n    padding: 1px 10px;\n    height: 25px;\n    margin-right: 10px;\n    font-size: 14px;\n    border-radius: 5px;\n    border: 1px solid grey;\n    outline: none;\n    transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n        border-color: orangered;\n    }\n    &:focus {\n        border-color: orangered;\n    }\n`\nexport const Button = styled.button`\n    padding: 2px 10px;\n    height: 30px;\n    font-size: 14px;\n    border: 1px solid grey;\n    border-radius: 5px;\n    background-color: white;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n        color:white;\n        background-color: orangered;\n    }\n`\n\nexport const Form = styled.form`\n    margin-bottom: 10px;\n`\nexport const Movie = styled.p`\n    font-size: 16px;\n    line-height: 1.2;\n    color: black;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:last-child {\n        margin-bottom: 5px;\n    }\n    &:hover {\n        color:orangered;\n    }\n`\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { Button, Container, Form, Input, Movie } from './Movies.styled';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { API_KEY, BASE_URL } from 'components/API/API';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const query = searchParams.get(\"query\") ?? '';\n  const location = useLocation();\n\n  const fetchMoviesQuery = async () => {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      query: query\n    });\n\n    const url = `${BASE_URL}/search/movie?query=${query}&${searchParams}`;\n    const response = await axios.get(url);\n    const { data } = response;\n    setMovies(data.results);\n  };\n\n  useEffect(() => {\n    fetchMoviesQuery();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      setMovies([]);\n      return;\n    }\n\n    setMovies([])\n    fetchMoviesQuery();\n  };\n\n  const handleInputChange = e => {\n    const searchQuery = e.target.value;\n    if (searchQuery === \"\") {\n      return setSearchParams({})\n    };\n      \n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handlerSubmit}>\n        <Input\n          type=\"text\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <Button type='submit'>Search</Button>\n      </Form>\n      <div>\n        {movies.length !== 0 ?movies.map((movie) => (\n          <Link key={movie.id} to={`${movie.id}`} state={{ from: location }}><Movie>&bull; {movie.title}</Movie></Link>\n        )) : <div>Please enter the correct search query.</div>}\n      </div>\n    </Container>\n  );\n};\n\nMovies.propTypes = {\n  query: PropTypes.string,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default Movies;"],"names":["BASE_URL","API_KEY","noPhoto","Container","styled","Input","Button","Form","Movie","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","fetchMoviesQuery","URLSearchParams","api_key","url","axios","response","data","results","useEffect","onSubmit","e","preventDefault","type","value","onChange","searchQuery","target","length","map","movie","Link","to","id","state","from","title"],"sourceRoot":""}