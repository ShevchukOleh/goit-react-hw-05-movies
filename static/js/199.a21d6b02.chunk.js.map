{"version":3,"file":"static/js/199.a21d6b02.chunk.js","mappings":"uNAAO,IAAMA,EAAW,+BACXC,EAAU,mCACVC,EAAU,qC,0LCAVC,EAAYC,EAAAA,GAAAA,IAAH,6IAOTC,EAAQD,EAAAA,GAAAA,IAAH,2CAGLE,EAAYF,EAAAA,GAAAA,IAAH,iDAGTG,EAAqBH,EAAAA,GAAAA,IAAH,yEAIlBI,EAASJ,EAAAA,GAAAA,EAAH,2aAiBNK,EAAaL,EAAAA,GAAAA,GAAH,0GAOVM,EAAaN,EAAAA,GAAAA,GAAH,kDAGVO,EAAYP,EAAAA,GAAAA,EAAH,kDAGTQ,EAAgBR,EAAAA,GAAAA,GAAH,kDAGbS,EAAgBT,EAAAA,GAAAA,EAAH,kDAIbU,EAAuBV,EAAAA,GAAAA,IAAH,kKAOpBW,EAAkBX,EAAAA,GAAAA,IAAH,+EAKfY,EAAsBZ,EAAAA,GAAAA,EAAH,mM,kBCgBhC,EA5EsB,WAAO,IAAD,IAClBa,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAiB3D,IAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,iGACQC,EAAe,IAAIC,gBAAgB,CACvCC,QAAS9B,EAAAA,KAGL+B,EALR,UAKiBhC,EAAAA,GALjB,kBAKmCiB,EALnC,YAK8CY,GAL9C,SAMyBI,EAAAA,EAAAA,IAAUD,GANnC,OAMQE,EANR,OAOUC,EAASD,EAATC,KACRd,EAASc,GARX,4CADc,uBAAC,WAAD,wBAYdC,EACD,GAAE,CAACnB,KAECG,EACH,OAAO,yBAAK,eAGd,IAAMiB,EAAYjB,EAAMkB,YAAN,yCAAsDlB,EAAMkB,aAAepC,EAAAA,GAC7F,OACE,iCACE,SAACK,EAAD,WACE,SAAC,EAAAgC,KAAD,CAAMC,GAAIhB,EAAoBiB,QAA9B,UAAuC,SAACjC,EAAD,UAAQ,wBAEjD,UAACL,EAAD,YACE,SAACE,EAAD,CAAOqC,IAAKL,EAAWM,IAAKvB,EAAMwB,SAClC,UAACtC,EAAD,YACE,SAACI,EAAD,UAAaU,EAAMwB,SACnB,UAACjC,EAAD,WAAW,gBAAiC,GAAnBS,EAAMyB,cAAiBC,QAAQ,GAAG,QAC3D,SAAClC,EAAD,UAAe,cACf,SAACC,EAAD,UAAgBO,EAAM2B,YACtB,wBAAI,YACJ,SAACtC,EAAD,UACGW,EAAM4B,OAAOC,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,aAM7B,UAACtC,EAAD,YACE,wBAAI,4BACJ,UAACC,EAAD,YACI,SAAC,EAAAwB,KAAD,CAAMC,GAAE,OAAR,UAAkB,SAACxB,EAAD,UAAqB,mBACvC,SAAC,EAAAuB,KAAD,CAAMC,GAAE,UAAR,UAAqB,SAACxB,EAAD,UAAqB,4BAGhD,SAAC,EAAAqC,SAAD,CAAUC,UAAU,SAACnD,EAAD,UAAW,eAA/B,UACE,SAAC,KAAD,QAIP,C","sources":["components/API/API.js","pages/MoviesDetails/MoviesDetails.styled.jsx","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '11c18f4587e0f81a9d7265ade8abe4b9';\nexport const noPhoto = 'https://i.ibb.co/nBW9G9B/avatar.jpg';","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    margin-top: 10px;\n    margin-bottom: 20px;\n    padding: 5px 10px;\n    max-width: 1400px;\n`\nexport const Image = styled.img`\n    width: 250px;\n`\nexport const MovieInfo = styled.div`\n    padding: 10px 20px;\n`\nexport const ContainerMovieInfo = styled.div`\n    padding-left: 10px;\n    padding-top: 10px;\n`\nexport const GoBack = styled.p`\n    border: 1px solid orangered;\n    border-radius: 3px;\n    height: 20px;\n    width: 100px;\n    padding: 2px 5px;\n    display: flex;\n    justify-content: center;\n    cursor: pointer;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover{\n        background-color: orangered;\n        color: white;\n    }\n`\n\nexport const GenresList = styled.ul`\n    list-style: none;\n    display: flex;\n    gap: 20px;\n    margin-top: 20px;\n`\n\nexport const MovieTitle = styled.h2`\n    margin-bottom: 20px;\n`\nexport const UserScore = styled.p`\n    margin-bottom: 30px;\n`\nexport const OverviewTitle = styled.h3`\n    margin-bottom: 20px;\n`\nexport const MovieOverview = styled.p`\n    margin-bottom: 30px;\n`\n\nexport const InformationContainer = styled.div`\n    border-top: 1px solid grey;\n    border-bottom: 1px solid grey;\n    font-size: 18px;\n    line-height: 1.2;\n    padding: 5px 10px;\n`\nexport const InformationList = styled.div`\n    display: grid;\n    margin: 10px;\n    gap: 10px;\n`\nexport const InformationListItem = styled.p`\n    font-size: 16px;\n    line-height: 1.2;\n    color: black;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover{\n        color: orangered;\n    }\n`\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { Container, ContainerMovieInfo, GenresList, GoBack, Image, InformationContainer, InformationList, InformationListItem, MovieInfo, MovieOverview, MovieTitle, OverviewTitle, UserScore } from './MoviesDetails.styled';\nimport { Suspense } from 'react';\nimport { API_KEY, BASE_URL, noPhoto } from 'components/API/API';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    async function fetchMovie() {\n      const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n      });\n\n      const url = `${BASE_URL}/movie/${movieId}?${searchParams}`;\n      const response = await axios.get(url);\n      const { data } = response;\n      setMovie(data);\n    };\n\n    fetchMovie();\n  }, [movieId]);;\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const imagePath = movie.poster_path ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`: noPhoto;\n  return (\n    <>\n      <ContainerMovieInfo>\n        <Link to={backLinkLocationRef.current}><GoBack>&larr; Go back</GoBack></Link>\n      </ContainerMovieInfo>\n      <Container>\n        <Image src={imagePath} alt={movie.title} />\n        <MovieInfo>\n          <MovieTitle>{movie.title}</MovieTitle>\n          <UserScore>User score: {(movie.vote_average*10).toFixed(0)}%</UserScore>\n          <OverviewTitle>Overview</OverviewTitle>\n          <MovieOverview>{movie.overview}</MovieOverview>\n          <h4>Genres</h4>\n          <GenresList>\n            {movie.genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n          </GenresList>\n        </MovieInfo>\n      </Container>\n\n\n      <InformationContainer>\n        <h4>Additional information</h4>\n        <InformationList>\n            <Link to={`cast`}><InformationListItem>&bull; Cast</InformationListItem></Link>\n            <Link to={`reviews`}><InformationListItem>&bull; Reviews</InformationListItem></Link>\n        </InformationList>\n      </InformationContainer>\n      <Suspense fallback={<Container>Loading...</Container>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nMoviesDetails.propTypes = {\n  movieId: PropTypes.number,\n  movie: PropTypes.shape({\n    id: PropTypes.number,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    title: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    })),\n  }),\n};\n\nexport default MoviesDetails;"],"names":["BASE_URL","API_KEY","noPhoto","Container","styled","Image","MovieInfo","ContainerMovieInfo","GoBack","GenresList","MovieTitle","UserScore","OverviewTitle","MovieOverview","InformationContainer","InformationList","InformationListItem","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","searchParams","URLSearchParams","api_key","url","axios","response","data","fetchMovie","imagePath","poster_path","Link","to","current","src","alt","title","vote_average","toFixed","overview","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}