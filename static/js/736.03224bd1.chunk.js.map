{"version":3,"file":"static/js/736.03224bd1.chunk.js","mappings":"uNAAO,IAAMA,EAAW,+BACXC,EAAU,mCACVC,EAAU,qC,2JCAVC,EAAYC,EAAAA,GAAAA,IAAH,yEAITC,EAAOD,EAAAA,GAAAA,GAAH,gHAMJE,EAAWF,EAAAA,GAAAA,GAAH,iGAKRG,EAAQH,EAAAA,GAAAA,IAAH,+DAILI,EAAYJ,EAAAA,GAAAA,GAAH,kKAQTK,EAAYL,EAAAA,GAAAA,EAAH,sK,kBCvBdM,EAAcC,EAAQ,IAAtBD,UAqDR,EAnDa,WACX,IAAQE,EAAYF,IAAZE,QACR,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAFiB,wCAIjB,iGACQC,EAAe,IAAIC,gBAAgB,CACvCC,QAASjB,EAAAA,KAGLkB,EALR,UAKiBnB,EAAAA,GALjB,kBAKmCY,EALnC,oBAKsDI,GALtD,SAMyBI,EAAAA,EAAAA,IAAUD,GANnC,OAMQE,EANR,OAOUC,EAASD,EAATC,KACRP,EAAQO,EAAKR,MARf,4CAJiB,sBAoBjB,OALAS,EAAAA,EAAAA,YAAU,YAfO,mCAgBfC,CAAeZ,EAEhB,GAAE,CAACA,KAGF,SAACT,EAAD,WACE,SAACE,EAAD,UACmB,IAAhBS,EAAKW,OAAeX,EAAKY,KAAI,SAAAC,GAC5B,IAAMC,EAAYD,EAAME,aAAN,yCAAuDF,EAAME,cAAiB3B,EAAAA,GAChG,OACE,UAACI,EAAD,YACA,SAACC,EAAD,CAAOuB,IAAKF,EAAWG,IAAKJ,EAAMK,QAClC,SAACxB,EAAD,UAAYmB,EAAMK,QAClB,UAACvB,EAAD,WAAW,cAAYkB,EAAMM,eAHdN,EAAMO,GAMxB,IATA,yDAcR,C","sources":["components/API/API.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '11c18f4587e0f81a9d7265ade8abe4b9';\nexport const noPhoto = 'https://i.ibb.co/nBW9G9B/avatar.jpg';","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    max-width: 1400px;\n    padding: 10px 10px;\n`\nexport const List = styled.ul`\n    flex-wrap: wrap;\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n`\nexport const ListItem = styled.li`\n    border: 1px solid grey;\n    border-radius: 3px;\n    width: 250px;\n`\nexport const Image = styled.img`\n    width: 250px;\n    height: 375px;\n`\nexport const ActorName = styled.h3`\n    display: flex;\n    font-size: 18px;\n    line-height: 1.2;\n    justify-content: center;\n    padding: 0 5px;\n    margin-top: 5px;\n`\nexport const Character = styled.p`\n    display: flex;\n    justify-content: center;\n    font-size: 16px;\n    line-height: 1.2;\n    padding: 0 5px;\n    padding-bottom: 5px;\n`","import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { Container, Image, List, ListItem, ActorName, Character } from './Cast.styled';\nimport { API_KEY, BASE_URL, noPhoto } from 'components/API/API';\n\nconst { useParams } = require('react-router-dom');\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  async function fetchCastMovie() {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY\n    });\n\n    const url = `${BASE_URL}/movie/${movieId}/credits?${searchParams}`;\n    const response = await axios.get(url);\n    const { data } = response;\n    setCast(data.cast);\n  }\n\n  useEffect(() => {\n    fetchCastMovie(movieId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  return (\n    <Container>\n      <List>\n        {cast.length !== 0 ? cast.map(actor => {\n          const imagePath = actor.profile_path ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` : noPhoto;\n          return (\n            <ListItem key={actor.id}>\n            <Image src={imagePath} alt={actor.name} />\n            <ActorName>{actor.name}</ActorName>\n            <Character>Character: {actor.character}</Character>\n          </ListItem>\n          )\n        }) : `We haven't information about the cast of this film.` }\n      </List>\n    </Container>\n\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.number,\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      character: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default Cast;"],"names":["BASE_URL","API_KEY","noPhoto","Container","styled","List","ListItem","Image","ActorName","Character","useParams","require","movieId","useState","cast","setCast","searchParams","URLSearchParams","api_key","url","axios","response","data","useEffect","fetchCastMovie","length","map","actor","imagePath","profile_path","src","alt","name","character","id"],"sourceRoot":""}